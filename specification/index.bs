<pre class="metadata">
Status: LD
Title: MNX Draft Specification
Shortname: cwmnx-draft
Level: 1
Editor: Joe Berkovitz, Noteflight / Hal Leonard Corporation
Abstract: A draft specification for the MNX music notation document format.
    MNX is a proposed music notation markup standard. Its aim is to improve
    MusicXML in fundamental ways, while retaining many of its key concepts, terms
    and features. MNX seeks to provide a high degree of interoperability and
    exchange between different applications working with music notation. The
    emphasis on interoperability is a differentiator between MNX and other
    notation encoding approaches, and takes it in a different direction from its
    predecessors.
Markup Shorthands: markdown yes
Repository: w3c/mnx
!Participate: <a href="https://github.com/w3c/mnx/issues/new">File an issue</a> (<a href="https://github.com/w3c/mnx/issues">open issues</a>)
</pre>

<pre class="anchors">
url: https://www.w3.org/TR/REC-xml-names#NT-QName; type: dfn;
    text: QName;
url: https://www.w3.org/TR/1999/REC-xpath-19991116#dt-expanded-name; type: dfn;
    text: expanded-name;
urlPrefix: https://www.w3.org/TR/css3-syntax/; type: dfn; spec: css3-syntax;
    text: consume a component value
    text: component value
    text: environment encoding
url: https://www.w3.org/TR/css-style-attr/#syntax; type: dfn; spec: css-style-attr;
    text: style attribute

urlPrefix: https://www.w3.org/TR/selectors4/#; type: dfn; spec: SELECTORS4
    text: type selector
    text: attribute selector
    text: pseudo-class

urlPrefix: https://www.w3.org/TR/css-cascade-4/#; type: dfn; spec: CSS-CASCADE-4
    text: specified value
    text: computed value

urlPrefix: https://www.w3.org/TR/xml/#; spec: XML; for: xml
    type: dfn; url: NT-Name; text: Name
    type: element-attr;
        url: sec-white-space; text: space

urlPrefix: https://www.w3.org/TR/xlink11/#; spec: XLINK; for: xlink; type: element-attr
    text: actuate; url: actuate-att
    text: href; url: link-locators
    url: link-semantics
        text: arcrole
        text: role
        text: title
    text: show; url: show-att
    text: type; url: link-types
    text: xlink; url: att-method

urlPrefix: https://www.w3.org/TR/xml-names/#; spec: XML-NAMES; for: xmlns; type: element-attr
    text: xmlns; url: ns-decl

url: https://www.w3.org/TR/html5/infrastructure.html#signed-integers; type: dfn; spec: html;
    text: rules for parsing integers
    text: rules for parsing signed integers
    text: valid integer
    text: signed integer

url: https://www.w3.org/TR/html5/infrastructure.html#non-negative-integers; type: dfn; spec: html;
    text: non-negative integer
    text: valid non-negative integer
    text: rules for parsing non-negative integers

url: https://www.w3.org/TR/html5/infrastructure.html#floating-point-numbers; type: dfn; spec: html;
    text: floating-point number
    text: valid floating-point number
    text: rules for parsing floating-point numbers

url: https://www.w3.org/TR/html5/infrastructure.html#percentages-and-lengths; type: dfn; spec: html;
    text: rules for parsing dimension values

url: https://www.w3.org/TR/html5/infrastructure.html#lists-of-floating-point-numbers; type: dfn; spec: html;
    text: valid list of floating-point numbers
    text: list of floating-point numbers
    text: rules for parsing a list of floating-point numbers

url: https://www.w3.org/TR/html5/infrastructure.html#space-separated-tokens; type: dfn; spec: html;
    text: set of space-separated tokens
    text: ordered set of space-separated tokens
    text: unordered set of space-separated tokens
    text: split a string on spaces

url: https://www.w3.org/TR/html5/infrastructure.html#colors; type:dfn; spec: html;
    text: simple color

url: https://w3c.github.io/musicxml/#; type: dfn;
    text: MusicXML specification

url: https://w3c.github.io/smufl/gitbook/specification#; type: dfn;
    text: SMuFL specification

url: https://w3c.github.io/smufl/gitbook/specification/glyphnames.html#; type: dfn;
    text: SMuFL glyph names

</pre>
<pre class="link-defaults">
spec:dom; type:dfn; text:attribute
</pre>

<h2 id="status">Status of this document</h2>

This document is an early draft and focuses on the main structural features
that distinguish MNX from MusicXML 3.1. Many elements are omitted, or their details
are referred to the <a>MusicXML specification</a> as a placeholder.

<h2 id="introduction">Introduction</h2>

<h3 id="background">Background</h3>

  <em>This section is non-normative.</em>

  MNX is a proposed music notation markup standard, which seeks to provide a
  high degree of interoperability and exchange between different applications
  working with music notation. This emphasis on interoperability is a
  differentiator between MNX and other notation encoding approaches, and takes
  it in a different direction from its predecessors.

  MNX stands for "Music Notation X", where "X" suggests "XML", "eXtended",
  and potentially other X-related things as may come to mind.

<h3 id="mnx-score-types">MNX score types</h3>

  <em>This section is non-normative.</em>

MNX can support multiple <dfn>score types</dfn>. Each score type is a specific encoding that applies
to some portion of a <a>container document</a>.

The present draft of this specification deals with two <a>score types</a>:

<ul>
  <li><a href="#cwmnx">CWMNX</a>, which encodes Conventional Western Music Notation (CWMN) in a
  semantically rich fashion. It inherits many ideas and concepts from MusicXML.</li>

  <li><a href="#gmnx">GMNX</a>, where "G" is for
  <strong>G</strong>eneral. It serves as a kind of universal encoding for
  scores having arbitary graphical and audio content. In consequence, it is
  relatively free of semantics.</li>
</ul>

<h3 id="comparisons">Comparisons with other notation standards</h3>

  <em>This section is non-normative.</em>

The CWMNX score type of MNX is a lineal descendant of MusicXML, and employs
many of the same concepts. However it sacrifices some features and flexibility
in favor of tighter interoperability, and simplifies the element structure
considerably. It also moves all non-semantic information into CSS properties.
The features in GMNX have no analogue in MusicXML.

MEI is a very general and expressive medium for encoding arbitrary musical
documents, with particular attention to the needs of scholars. Due to its
extreme plasticity, MEI is perhaps better described as a powerful framework
for building customized documents and applications, than as a single encoding
method. As such, interoperability has not been a main goal of MEI to date.
However there are efforts underway to define a clean MEI subset as an
interoperable medium for encoding CWMN (sometimes known as "MEI Go").

IEEE 1599 is a specification that has paid unique attention to the
relationships between different layers of musical information. Its Logic layer
is similar in content to CWMNX, while its Notational, Performance and Audio
layers answer some of the same concerns as GWMNX. GMNX takes a different
approach to connecting these layers, and does not attempt to fully
unify semantic information with visual and performance data. It relies
to a greater degree on SVG, and to a lesser degree on MIDI.

<h3 id="compatibility">Compatibility with MusicXML</h3>

  <em>This section is non-normative.</em>

MNX uses MusicXML as a point of departure in many ways, but it does not
attempt to be backward-compatible with MusicXML, nor is it a superset of
MusicXML. However, a large proportion of MusicXML markup is expected to be
preserved. In these examples, MusicXML constructs are used freely throughout
as a way to show how proposed new concepts dovetail with existing ones.

Backward compatibility aside, it is a goal to be able to machine-translate
MusicXML into MNX. This is essential for migration purposes.

<h3 id="use-cases">Use cases</h3>

  <em>This section is non-normative.</em>

A companion document details a set of [known use cases for music notation](../use-cases/index.html).

<h3 id="audience">Audience</h3>

  <em>This section is non-normative.</em>

  This specification is intended for authors of documents and applications that use the features defined
  in this specification, implementors of tools that operate on documents that use the
  features defined in this specification, and individuals wishing to establish the correctness of
  documents or implementations with respect to the requirements of this specification.

  This document is probably not suited to readers who do not already have at least a passing
  familiarity with XML technologies. In places it sacrifices clarity for precision, and brevity
  for completeness. More approachable tutorials and authoring guides can provide a gentler
  introduction to the topic.

<h3 id="history">History</h3>

  <em>This section is non-normative.</em>

  <em>Content TBD</em>


<h3 id="design-notes">Design notes</h3>

  <em>This section is non-normative.</em>

  <em>Content TBD</em>

<h4 id="design-notes-extensibility">Extensibility</h4>

  <em>This section is non-normative.</em>

  <em>Content TBD</em>

<h3 id="structure-of-this-specification">Structure of this specification</h3>

  <em>This section is non-normative.</em>

  This specification is divided into the following major sections:

  <div dfn-for="spec">
    : [[#introduction]]
    :: Non-normative materials providing a context for the HTML specification.
    : [[#cwmnx-semantics]]
    :: Each element has a predefined meaning, which is explained in this section. Rules for authors
        on how to use the element, along with user agent requirements for how to
        handle each element, are also given. This includes large signature features of HTML
        such as video playback and subtitles, form controls and form submission, and a 2D graphics
        API known as the HTML canvas.
    : [[#cwmnx-rendering]]
    :: This section defines the default rendering rules for Web browsers.
  </div>

<h4 id="how-to-read-this-specification">How to read this specification</h4>

  As described in the conformance requirements section below, this specification describes
  conformance criteria for a variety of conformance classes. In particular, there are conformance
  requirements that apply to <em>producers</em>, for example authors and the documents they create,
  and there are conformance requirements that apply to <em>consumers</em>, for example Web browsers.
  They can be distinguished by what they are requiring: a requirement on a producer states what is
  allowed, while a requirement on a consumer states how software is to act.

  <div class="example">
    For example, "the <code>foo</code> attribute's value must be a valid integer" is a
    requirement on producers, as it lays out the allowed values; in contrast, the requirement "the
    <code>foo</code> attribute's value must be parsed using the rules for parsing integers"
    is a requirement on consumers, as it describes how to process the content.
  </div>

  <strong>Requirements on producers have no bearing whatsoever on consumers.</strong>

<h4 id="typographic-conventions">Typographic conventions</h4>

  <div>
    This is a definition, requirement, or explanation.

    <p class="note">This is a note.</p>

    <p class="example">This is an example.</p>

    <p class="&#x0058;&#x0058;&#x0058;">This is an open issue.</p>

    <p class="warning">This is a warning.</p>

    <pre class="css" highlight="css">/* this is a CSS fragment */</pre>

    The defining instance of a term is marked up like <dfn noexport>this</dfn>.
    Uses of that term are marked up like [=this=] or like <a><i>this</i></a>.

    The defining instance of an element, attribute, or API is marked up like
    <dfn element noexport><code>this</code></dfn>. References to that element, attribute, or API are
    marked up like <{this}>.

    Other code fragments are marked up <code>like this</code>.

    Byte sequences with bytes in the range 0x00 to 0x7F, inclusive, are marked up like
    `this`.

    Variables are marked up like <var ignore>this</var>.

    In some cases, requirements are given in the form of lists with conditions and corresponding
    requirements. In such cases, the requirements that apply to a condition are always the first set
    of requirements that follow the condition, even in the case of there being multiple sets of
    conditions for those requirements. Such cases are presented as follows:

    <dl class="switch">
      <dt>This is a condition</dt>
      <dt>This is another condition</dt>
      <dd>This is the requirement that applies to the conditions above.</dd>
      <dt>This is a third condition</dt>
      <dd>This is the requirement that applies to the third condition.</dd>
    </dl>
  </div>


<h3 id="suggested-reading">Suggested reading</h3>

  <em>This section is non-normative.</em>

  The following documents might be of interest to readers of this specification.

<section>
<h2 id="infrastructure">Infrastructure</h2>

<h3 id="terminology">Terminology</h3>

<h4 id="notational-idioms">Notational idioms</h4>

A <dfn>notational idiom</dfn> is a set of rules in the world for encoding
music as some set of visual markings, which can be interpreted by musicians to
produce an audible performance.

<h5 id="cwmn">Conventional Western music notation (CWMN)</h5>

<h4 id="score profiles">Score profiles</h4>

A <dfn>score profile</dfn> is a set of constraints on the rules in a notational idiom.
Score profiles are designed to narrow the set of constructs that can be produced or consumed
in MNX to a practical scope.

<h3 id="common-syntaxes">Common syntaxes</h3>

There are various places in MNX that accept particular data types, such as
note values, numbers or durations. This section describes the conformance
criteria for content in those formats, and how to parse them.

<h4 id="common-parser-idioms">Common parser idioms</h4>

  The <dfn export>space characters</dfn>, for the purposes of this specification, are U+0020 SPACE, U+0009
  CHARACTER TABULATION (tab), U+000A LINE FEED (LF), U+000C FORM FEED (FF), and U+000D CARRIAGE
  RETURN (CR).

  The <dfn lt="white_space|white_space characters">White_Space characters</dfn> are those that have the Unicode property "White_Space" in
  the Unicode <code>PropList.txt</code> data file. [[!UNICODE]]

  <p class="note">
    This should not be confused with the "White_Space" value (abbreviated "WS") of the "Bidi_Class"
    property in the <code>Unicode.txt</code> data file.
  </p>

  The <dfn export>control characters</dfn> are those whose Unicode "General_Category" property has the
  value "Cc" in the Unicode <code>UnicodeData.txt</code> data file. [[!UNICODE]]

  The <dfn export>uppercase ASCII letters</dfn> are the characters in the range U+0041 LATIN CAPITAL LETTER
  A to U+005A LATIN CAPITAL LETTER Z.

  The <dfn export>lowercase ASCII letters</dfn> are the characters in the range U+0061 LATIN SMALL LETTER A
  to U+007A LATIN SMALL LETTER Z.

  The <dfn export>ASCII letters</dfn> are the characters that are either [=uppercase ASCII letters=] or
  [=lowercase ASCII letters=].

  The <dfn export>ASCII digits</dfn> are the characters in the range U+0030 DIGIT ZERO (0) to U+0039 DIGIT
  NINE (9).

  The <dfn export>alphanumeric ASCII characters</dfn> are those that are either
  <a>uppercase ASCII letters</a>, <a>lowercase ASCII letters</a>, or <a>ASCII digits</a>.

  The <dfn export>ASCII hex digits</dfn> are the characters in the ranges U+0030 DIGIT ZERO (0) to U+0039
  DIGIT NINE (9), U+0041 LATIN CAPITAL LETTER A to U+0046 LATIN CAPITAL LETTER F, and U+0061 LATIN
  SMALL LETTER A to U+0066 LATIN SMALL LETTER F.

  The <dfn export>uppercase ASCII hex digits</dfn> are the characters in the ranges U+0030 DIGIT ZERO (0)
  to U+0039 DIGIT NINE (9) and U+0041 LATIN CAPITAL LETTER A to U+0046 LATIN CAPITAL LETTER F only.

  The <dfn export>lowercase ASCII hex digits</dfn> are the characters in the ranges U+0030 DIGIT ZERO (0)
  to U+0039 DIGIT NINE (9) and U+0061 LATIN SMALL LETTER A to U+0066 LATIN SMALL LETTER F only.

  Some of the micro-parsers described below follow the pattern of having an <var>input</var>
  variable that holds the string being parsed, and having a <var>position</var> variable pointing at
  the next character to parse in <var>input</var>.

  For parsers based on this pattern, a step that requires the consumer to <dfn>collect a sequence
  of characters</dfn> means that the following algorithm must be run, with <var>characters</var>
  being the set of characters that can be collected:

  1. Let <var>input</var> and <var>position</var> be the same variables as those of the same name in
      the algorithm that invoked these steps.
  2. Let <var>result</var> be the empty string.
  3. While <var>position</var> doesn't point past the end of <var>input</var> and the character at
      <var>position</var> is one of the <var>characters</var>, append that character to the end of
      <var>result</var> and advance <var>position</var> to the next character in <var>input</var>.
  4. Return <var>result</var>.

  The step <dfn>skip white space</dfn> means that the consumer must
  <a>collect a sequence of characters</a> that are [=space characters=]. The collected characters
  are not used.

  When a consumer is to <dfn lt="stripped line breaks|strip line breaks">strip line breaks</dfn> from a string, the consumer must remove
  any U+000A LINE FEED (LF) and U+000D CARRIAGE RETURN (CR) characters from that string.

  When a consumer is to <dfn lt="strip leading and trailing white space|stripping leading and trailing white space|leading and trailing white space stripped">strip leading and trailing white space</dfn> from a string, the
  consumer must remove all [=space characters=] that are at the start or end of the string.

  When a consumer is to <dfn lt="stripping and collapsing white space|strip and collapse white space">strip and collapse white space</dfn> in a string, it must replace any
  sequence of one or more consecutive [=space characters=] in that string with a single U+0020
  SPACE character, and then <a>strip leading and trailing white space</a> from that string.

  When a consumer has to <dfn lt="strictly splitting the string|strictly split a string|strictly split">strictly split a string</dfn> on a particular delimiter character
  <var>delimiter</var>, it must use the following algorithm:

  1. Let <var>input</var> be the string being parsed.
  2. Let <var>position</var> be a pointer into <var>input</var>, initially
      pointing at the start of the string.
  3. Let <var>tokens</var> be an ordered list of tokens, initially empty.
  4. While <var>position</var> is not past the end of <var>input</var>:
      1. <a>Collect a sequence of characters</a> that are not the <var>delimiter</var> character.
      2. Append the string collected in the previous step to <var>tokens</var>.
      3. Advance <var>position</var> to the next character in <var>input</var>.
  5. Return <var>tokens</var>.

  <p class="note">
    For the special cases of splitting a string <a lt="split a string on spaces">on spaces</a> and <a lt="split a string on commas">on commas</a>, this
    algorithm does not apply (those algorithms also perform <a lt="strip leading and trailing white space">white space trimming</a>).
  </p>

<h4 id="numbers">Numbers</h4>

<h5 id="rational-numbers">Rational numbers</h5>

  A string is a <dfn>rational number</dfn> if it is either an integer, or a pair of integers
  separated by a U+002F SLASH whose second element is nonzero.

  The <dfn export>rules for parsing rational numbers</dfn> are as given in the following algorithm. When
  invoked, the steps must be followed in the order given, aborting at the first step that returns
  a value. This algorithm will return a pair of integers, one for the numerator and one for the denominator which  must be nonzero, or an error.

  1. Let <var>input</var> be the string being parsed.
  2. Let <var>position</var> be a pointer into <var>input</var>, initially pointing at the start of
      the string.
  3. Let <var>fraction</var> be an initially empty list of integers.
  4. <a>Collect a sequence of characters</a> that are [=space characters=]. These are skipped.
  5. While <var>position</var> is not past the end of <var>input</var>, and <var>fraction</var> contains
      fewer than two elements:
      1. <a>Collect a sequence of characters</a> that are not [=space characters=], <a>ASCII digits</a>, U+002D HYPHEN-MINUS or U+002F SLASH
          characters. This skips past leading garbage.
      2. <a>Collect a sequence of characters</a> that are not [=space characters=] or U+002F SLASH, and let <var>unparsed number</var> be the result.
      3. Let <var>number</var> be the result of parsing <var>unparsed number</var> using the
          <a>rules for parsing signed integers</a>.
      4. If <var>number</var> is an error, set <var>number</var> to zero.
      5. Append <var>number</var> to <var>fraction</var>.
      6. <a>Collect a sequence of characters</a> that are [=space characters=], or U+002F SLASH.
  6. If <var>fraction</var> has no elements, return zero.
  7. If <var>fraction</var> has only one element, append 1 to <var>fraction</var>.
  8. Return the first element of <var>fraction</var> as the numerator and the second element
     of <var>fraction</var> as the denominator.

<h4 id="element-locations">Element locations</h4>

An <dfn>element location</dfn> constitutes a reference to a specific element
in the document. It consists of the character `#`, immediately followed by the
XML ID of the referenced element.

</section>

<h2 id="document">Document organization</h2>

<h3 id="the-container-document">The container document</h3>

Each MNX document acts as a <dfn>container document</dfn>, which contains a
hierarchy of components which collectively make up the
document as a whole.

<h4 id="the-mnx-element">The <dfn element><code>mnx</code></dfn> element</h4>
<section dfn-for="mnx">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>None: this is the top-level element.</dd>
    <dt><a>Content Model</a>:</dt>
    <dd>A single, required <{head}> element.</dd>
    <dd>Either a <{collection}> or a <{score}> element.</dd>
    <dt><a>Attributes</a>:</dt>
    <dd>None.</dd>
  </dl>

The <{mnx}> element encloses an MNX document as a whole.
</section>

<h4 id="the-head-element">The <dfn element><code>head</code></dfn> element</h4>
<section dfn-for="head">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>Any.</dd>
    <dt><a>Content Model</a>:</dt>
    <dd><a>Metadata content</a>.</dd>
    <dd><a>Stylesheet definitions</a>.</dd>
    <dt><a>Attributes</a>:</dt>
    <dd>None.</dd>
  </dl>
The <{head}> element supplies overall descriptive information for an MNX document,
such as document-scoped metadata or <a>stylesheet definitions</a>.
</section>

<h4 id="the-collection-element">The <dfn element><code>collection</code></dfn> element</h4>
<section dfn-for="collection">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd><{mnx}>, <{collection}></dd>
    <dt><a>Content Model</a>:</dt>
    <dd>Any combination of <{collection}> and <{score}> elements.</dd>
    <dt><a>Attributes</a>:</dt>
    <dd><{collection/type}> - The type of the collection</dd>
  </dl>

The <{collection}> element describes a collection, which is a sequence of
ordered elements that make up a compound musical document. Each child element
of the collection may itself be either a collection or a score.

The <dfn element-attr>type</dfn> attribute determines the nature of the collection.
Valid collection type values include:

: <dfn attr-value><code>movements</code>
:: Each element comprises a movement of a work.
: <dfn attr-value><code>sections</code>
:: Each element comprises a section of a work, or of a movement.
: <dfn attr-value><code>parts</code>
:: Each element comprises a description of of the same music, organized for different parts.

</section>

<h4 id="the-score-element">The <dfn element><code>score</code></dfn> element</h4>
<section dfn-for="score">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd><{mnx}>, <{collection}>.</dd>
    <dt><a>Content Model</a>:</dt>
    <dd>A single <{cwmnx}> or <{gmnx}> element.</dd>
    <dt><a>Attributes</a>:</dt>
    <dd>None.</dd>
  </dl>
</section>

The <{score}> element encloses a self-contained description of the score for
a portion or the entirety of a musical work.

<!--
### A simple CWMN score

### A simple general score

### Compound MNX documents

It's also possible to combine different representations of music in the same
MNX document by using the <{collection}> element to combine  multiple chunks
of music into a single chunk.  Each chunk may possess a distinct encoding.
<{collection}> elements can be nested, allowing a subordinate collection to be 
embedded in a higher-level one.

Metadata elements such as <{identification}> or formatting elements like
<{style}> may be included at any level of the resulting structure, causing
them to apply them only to those parts of the document.

Here's an example that includes a hierarchy of collections and scores. (Note
that some of these could employ non-CWMN encodings as well.)

-->

<h3 id="content-models">Content models and categories</h3>

  Each element in MNX falls into zero or more <dfn lt="content
  categories|content category">categories</dfn> that group elements with
  similar characteristics together. Examples of content categories
  include <a>event content</a> and <a>sequence content</a>, among
  many others.

<h4 id="element-definitions">Element definitions</h4>

  Each element in this specification has a definition that includes the following information:

  : <dfn>Contexts in which this element can be used</dfn>
  :: A <em>non-normative</em> description of where the element can be used. This information is
      redundant with the content models of elements that allow this one as a child, and is provided
      only as a convenience.

  : <dfn>Content model</dfn>
  :: A normative description of what content must be included as children and descendants of the
      element.

  : <a>Attributes</a>
  :: A normative list of attributes that may be specified on the element (except where otherwise
      disallowed), along with non-normative descriptions of those attributes. (The content to the
      left of the dash is normative, the content to the right of the dash is not.)

  : <a>Style properties</a>
  :: A normative list of style properties that may be specified on the element (except where otherwise
      disallowed), along with non-normative descriptions of those attributes. Where these attributes may
      be inherited from ancestor elements, this is indicated.

  This is then followed by a description of what the element represents, along with any
  additional normative conformance criteria that may apply to producers and consumers
  and implementations. Examples are sometimes also included.

<h2 id="mnx-container">MNX container</h2>

<section>
<h3 id="mnx-scope">Scope</h3>

  <em>This section is non-normative.</em>

  The MNX <dfn>container</dfn> is a top-level XML document that contains one or more scores accompanied by
  metadata.

</section>

<h3 id="mnx-semantics-elements">Semantics</h3>

<h4 id="mnx-content-types">Content types</h4>

<h5 id="mnx-metadata-content">Metadata content</h5>

<dfn>Metadata content</dfn> may be included in many elements to supply
bibliographic data and other descriptive information.

<em>List of elements TBD</em>

<h5 id="mnx-musical body">Musical body content</h5>

A <dfn lt="musical body|musical bodies|musical body content">musical
body</dfn> consists of a score in some <a>notational idiom</a> supplying
concrete musical content that can be rendered and/or performed.

<h2 id="cwmnx">CWMNX</h2>

<section>
<h3 id="cwmnx-scope">Scope</h3>

  <em>This section is non-normative.</em>

</section>

<h3 id="cwmnx-semantics">Semantics</h3>

<h4 id="cwmnx-notational-concepts">Notational concepts</h4>

This section describes various foundational concepts in music notation that
are frequently referenced by this specification. 

<h5 id="cwmnx-parts-staves">Parts and staves</h5>

A score consists of multiple <dfn>parts</dfn>.  Each <a>part</a> is a grouping
of related musical material that relates to a single performer or set of
performer.  It has the same temporal extent as the score overall, but presents
a slice of content that is relevant to a single instrument or a group of
related instruments.

A part may employ one or more <dfn lt="staff|staves">staves</dfn>. Each <a>staff</a>
supplies a pair of dimensions, one for pitch and one for time, within which
notes may be placed.  Conventionally, the pitch dimension is vertically
oriented and the time dimension is horizontally oriented. All <a>staves</a>
within a <a>part</a> share the same time dimension.

Every segment of a staff possesses a <dfn>clef</dfn> that determines the
mapping between its pitch dimension and some set of performable pitches, with
additional information supplied by a <dfn>key signature</dfn>. <dfn>Accidental</dfn>
symbols on <a>notes</a> further modify this mapping on an ad-hoc basis.

Staves in CWMN are identified within a part by a unique <dfn>staff
index</dfn>. The topmost staff in a part has a staff index of 1; staves below
the topmost staff are identified with successively increasing indices.

<h5 id="cwmnx-notated-events">Notated events</h5>

A <dfn>notated event</dfn> in CWMN is a discrete action in the score with a
notated duration. It has an onset that is relative to the start of its
containing sequence as well as to other elements in that sequence, subject to
the conventions of CWMN.  Events belong to a specific <a>staff</a> within a
part, denoted by its <a>staff index</a>.

A notated event may include one or more <dfn>notes</dfn> possessing a
pitch, or a <dfn>rest</dfn> indicating silence.  Events including more than
one note are referred to as <dfn>chords</dfn>.

In both cases, the event possesses an associated <a>note value</a> that indicates
its duration. This value is not literal, but is subject to performance interpretation.

Events may further possess <dfn>articulations</dfn>, additional properties
that modulate their musical performance in commonly understood ways. In this
specification, we use the term <a>articulation</a> in an expanded sense to
cover all such additional properties.

Notated events are represented by the <{event}> element.

<h5 id="cwmnx-metrical-position">Metrical position</h5>

Most notated events possess a well-defined <dfn>metrical position</dfn>,
giving a time onset expressed as a rational number of whole note durations
after the start of its containing measure. This position may be thought of as
the event's "address" and plays a determining role in the normative rendering
and performance of events.

Grace notes are a special case, in that they do not have a metrical position.
They merely have a well-defined notational ordering relative to other notated
events in the measure.

<h5 id="chromatic-pitches">Chromatic pitches</h4>

A <dfn>chromatic pitch</dfn> describes a pitch situated in a 12-tone
temperament notated as per CWMN conventions. The description incorporates
three elements:

- The <dfn>diatonic step</dfn>, which is one of the letters `A` through `G`, describing
    the corresponding diatonic steps.

- The <dfn>octave</dfn>, which is an integer giving the octave in which
    the step occurs. The assignment of pitches to octaves follows the <a href="https://en.wikipedia.org/wiki/Scientific_pitch_notation">
    Scientific Pitch Notation (SPN)</a> convention, in which the octave number increases
    on the step from `B` to `C`.

- The <dfn>alteration</dfn>, which is a floating-point alteration in semitones
    applied to the step and octave.


<h5 id="cwmnx-directions">Directions</h5>

A <dfn>direction</dfn> is a discrete instruction in the score
that applies to notated events.

Directions do not have a duration, although they have a specific location in
relation to a containing measure or sequence. Like events, directions also
belong to a specific <a>staff</a> within a part, denoted by its one-based
<a>staff index</a>.

Directions come in the following flavors:

<dfn>Single-ended</dfn> directions begin at a point in time in some part and
generally continue to apply until superseded by another direction, or by some
notation in the score that is understood to terminate it. An example is a
<em>piano</em> dynamic.

<dfn>Span</dfn> directions begin at a point in time in some part and
end at a later point within the same part. A common example of a span direction
is a slur.

<h5 id="sequence">Notated sequences</h5>

A <dfn>notated sequence</dfn> is a set of <a>notated events</a> whose notional
time intervals do not overlap, and which occur at progressively greater temporal
offsets within a measure.

Notated sequences are represented by the <{sequence}> element.

<h5 id="cwmnx-performance-interpretation">Performance Interpretation</h5>

A <dfn>performance interpretation</dfn> is the end result of deriving
a set of <a>performance events</a> from a score. Human performers do this
by reading music, while MNX consumers will generally do this algorithmically.

In GMNX, a consumer is given the exact performance interpretation as part of
the document.  In CWMNX, a consumer will typically employ a set of rules that
mimic the actions of a human performer, overriding these with exact
performance events where these are explicitly supplied within the document.

<h5 id="cwmnx-performance-events">Performance events</h5>

A <dfn>performance event</dfn> is a description of a single timed
element of a musical performance with specific attributes for its onset,
duration, pitch, dynamics, articulation and instrument. Unlike a notated
event, these attributes are specific and not subject to interpretation, and
they are independent of any notational concepts.

Performance events in MNX are used to describe the exact <a>performance
interpretation</a> of some or all of a score, as distinct from its notation.

<h5 id="note-values">Note values</h5>

There are a variety of situations in which the <dfn>note value</dfn> of a
musical event needs to be described, in terms of some fraction or multiple of
a CWMN whole-note unit.

In CWMN, fractions for undotted <dfn>base note values</dfn> are constrained to
be exact powers of two.  The most common note values of whole, half, quarter,
etc. correspond to whole-note fractions expressed by the non-negative powers
2<sup>0</sup>, 2<sup>-1</sup>, 2<sup>-2</sup>. The less frequently used note
values of breve, longa, etc. are expressed by the positive powers
2<sup>1</sup>, 2<sup>2</sup>, ...

In the broader case of <dfn>general note values</dfn>, some <dfn>number of dots</dfn>
act as a multiplier on the <a>base note value</a>. These multipliers take the form
(2<sup><em>n</em>+1</sup>-1) / 2<sup><em>n</em></sup>, where <em>n</em> is the
<a>number of dots</a>.

<h5 id="event-orientation">Orientation</h5>

Events and sequences may possess an optional <dfn>orientation</dfn> that
determines a the placement and rendering of content according to a complex set
of CWMN conventions. For the purposes of CWMNX there are two orientations:

<ul>
<li>An orientation of <em>up</em> orients note stems pointing upwards, and places beams, directions
and articulations accordingly.</li>

<li>An orientation of <em>down</em> orients note stems pointing upwards, and places beams, directions
and articulations accordingly.</li>
</ul>

<h4 id="cwmnx-notational-syntaxes">Notational syntaxes</h4>

<h5 id="note-value-syntax">Note value syntax</h5>

MNX provides a microsyntax for encoding note values whose syntactic
constraints map to the above requirements. Its syntax is designed to be
distinguishable from other syntaxes for integers, floating point numbers or
rational numbers.  The syntax for <a>base note values</a> consists of either
of the following forms:

1. For values less than or equal to a whole note:
    1. The character U+002F SLASH
    1. One or more <a>ASCII digits</a> encoding the <a>base note value</a> as a power-of-two fractional denominator
1. For values greater than a whole note:
    1. The character U+002A ASTERISK
    1. One or more <a>ASCII digits</a> encoding the <a>base note value</a> as a power-of-two multiplying factor

The syntax for <a>general note values</a> consists of these components:

1. A <a>base note value</a> encoding.
1. Zero or more occurrences of U+0064 LOWERCASE D characters. The number of occurrences
      supply the <a>number of dots</a>.

To <dfn>parse a note value</dfn>, use the following procedure:

  1. Let <var>input</var> be the string being parsed.
  1. Let <var>position</var> be a pointer into <var>input</var>, initially pointing at the start of
      the string.
  1. Let <var>number of dots</var> be 0.
  1. If the character indicated by <var>position</var> is a U+002A ASTERISK character (*), let <var>fractional</var>
      be <code>false</code> and advance <var>position</var> by 1.
  1. Else, if the character indicated by <var>position</var> is a U+002E SLASH character (/), let <var>fractional</var>
      be <code>true</code> and advance <var>position</var> by 1.
  1. Else, return an error.
  1. <a>Collect a sequence of characters</a> that are <a>ASCII digits</a> only and let <var>unparsed number</var>
      be the result.
  1. Let <var>base value</var> be the result of parsing <var>unparsed number</var> using the
      <a>rules for parsing integers</a>.
  1. If parsing a general note value, <a>collect a sequence of characters</a> that are U+0064 LOWERCASE D
      characters. Set <var>number of dots</var> to the length of this sequence.
  1. If <var>position</var> is not at the end of the string, return an error.
  1. If <var>base value</var> is not equal to a power of 2, return an error.
  1. If <var>base value</var> is equal to 1 and <var>fractional</var> is false, return an error.
  1. If <var>fractional</var> is true, set <var>base value</var> to (1 / <var>base value</var>).
  1. If <var>number of dots</var> is greater than zero, multiply <var>base value</var> by
      (2<sup>(<var>number of dots</var>+1)</sup>-1) / 2<sup>(<var>number of dots</var>)</sup>.
  1. Return <var>base value</var>.

<div class="example">
Here are some instances of the note value syntax:

: `/1`
:: a whole note
: `/4`
:: a quarter note
: `/8`
:: an eighth note
: `/8d`
:: a dotted eighth note
: `/8dd`
:: a double-dotted eighth note
: `*2`
:: a breve (double whole note)
: `*2d`
:: a dotted breve

</div>

<h5 id="note-value-multiple">Note value quantity syntax</h5>

MNX allows the specification of a <dfn>note value quantity</dfn>, defined as
an integer multiple of a <a>note value</a>. To parse a note value quantity,
use the following procedure:

  1. Let <var>input</var> be the string being parsed.
  1. Let <var>position</var> be a pointer into <var>input</var>, initially pointing at the start of
      the string.
  1. Let <var>multiplier</var> be 1.
  1. <a>Collect a sequence of characters</a> that are <a>ASCII digits</a> only, and let <var>unparsed number</var>
      be the result.
  1. If <var>unparsed number</var> is not empty, assign <var>unparsed number</var> to <var>multiplier</var>
      using the <a>rules for parsing integers</a>.
  1. Let <var>note value</var> be the result of parsing the remainder of string beginning at <var>position</var>
      according to the rules to <a>parse a note value</a>.
  1. Return <var>multiplier</var> and <var>note value</var> as the result.

Examples include:

: `/8`
:: a single eighth note
: `6/8`
:: six eighth notes
: `6/8d`
:: six dotted eighth notes
: `5*1`
:: five whole notes

<h5 id="chromatic-pitch-syntax">Chromatic pitch syntax</h5>

MNX allows the specification of a <a>chromatic pitch</a> in a single string,
by employing the <dfn>rules for parsing a chromatic pitch</dfn>. To parse this
syntax, employ the following procedure:

  1. Let <var>input</var> be the string being parsed.
  1. Let <var>position</var> be a pointer into <var>input</var>, initially pointing at the start of
      the string.
  1. Let <var>alteration</var> be 0.
  1. If the character at <var>position</var> is not an <a>uppercase ASCII letter</a> in the range from
    U+0041 UPPERCASE A - U+0047 UPPERCASE G, return an error.
  1. Let <var>step</var> be the character at <var>position</var>, and advance <var>position</var> by 1.
  1. If the character at <var>position</var> is U+0023 HASH,
       1. While the character at <var>position</var> is U+0023 HASH,
           1. Increase <var>alteration</var> by 1.
           1. Advance <var>position</var> by 1.
  1. If the character at <var>position</var> is U+0061 b,
       1. While the character at <var>position</var> is U+0061 b,
           1. Decrease <var>alteration</var> by 1.
           1. Advance <var>position</var> by 1.
  1. <a>Collect a sequence of characters</a> that are <a>ASCII digits</a> only and let <var>unparsed number</var>
      be the result.
  1. Let <var>octave</var> be the result of parsing <var>unparsed number</var> using the
      <a>rules for parsing integers</a>.
  1. If <var>position</var> is not at the end of the string, return an error.
  1. Return <var>step</var>, <var>octave</var> and <var>alteration</var> as the result.

Examples include:

: `C4`
:: Middle C
: `C#4`
:: The pitch one semitone above middle C
: `Db4`
:: The pitch one semitone above middle C (identical to the above)
: `C4+0.5`
:: The pitch one quarter-tone above middle C
: `B3+1.5`
:: The pitch one quarter-tone above middle C (identical to the above)
: `C#4-0.5`
:: The pitch one quarter-tone above middle C (identical to the above)


<h5 id="measure-locations">Measure location syntax</h5>

There are a variety of situations in which the <dfn>measure location</dfn> of a
musical event needs to be described, in terms of the content of the measure.

The following cases exist for specifying <a>measure locations</a>:

<ol>
  <li>If the <a>measure location</a> is a <a>metrical position</a> in the context
  of some containing measure, then it is specified as a <a>valid floating-point
  number</a> or <a>note value quantity</a> that gives the number of whole notes from the start of the
  measure.</li>

  <li>If the <a>measure location</a> is a <a>metrical position</a> in the context
  of an arbitrary <{measure}> in the score, then it is specified as a <a>set of
  space-separated tokens</a>. The first token is a <a>element location</a>
  identifying the measure, and the second token is a <a>valid floating-point
  number</a> or <a>note value quantity</a> that gives the number of whole notes from the start of the
  identified measure. The identified measure must belong to the same
  <a>system content</a> as the element in which the measure location is given.</li>

  <li>If the <a>measure location</a> is identical to the <a>metrical position</a>
  of some known <{event}> in the score, then it is specified as a <a>element location</a>
  identifying the event. The identified event must belong to the same
  <a>system content</a> as the element in which the measure location is given.</li>
</ol>

<div class="example">
Here are some instances of the measure location syntax:

: `0.25`
:: one quarter note after the start of a containing measure
: `3/8`
:: three eighth notes after the start of a containing measure
: `#m4 0.25`
:: one quarter note after the start of the measure whose element ID is `m4`
: `#m4 1/4`
:: the same as the preceding example
: `#event235`
:: the same metrical position as the event whose element ID is `event235`

</div>

<h5 id="glyph-names">SMuFL glyph name syntax</h5>

Some contexts, particularly the 'glyph' property, permit the specification of
a <a>SMuFL glyph name</a> from the catalog of glyph names defined in the
<a>SMuFL specification</a>.

<section>
<h4 id="cwmnx-body-content">CWMNX body content</h4>

These elements of a CWMNX score supply its high-level description and structure.

<h5 id="the-cwmnx-element">The <dfn element><code>cwmnx</code></dfn> element</h5>

<section dfn-for="cwmnx">

  <dl class="def">
    <dt><a lt="content categories">Description</a>:</dt>
    <dd><a>Musical body content</a> in an MNX <a>container</a>.</dd>
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>Wherever a <a>musical body</a> is expected.</dd>
    <dt><a>Content Model</a>:</dt>
    <dd><a>Metadata content</a>.</dd>
    <dd><a>Stylesheet definitions</a>.</dd>
    <dd>Exactly one <{system}> element - <a>system content</a> that is common to all parts within the score</dd>
    <dd>One or more <{part}> elements - description and <a>system content</a> of each part in the score.</dd>
    <dt><a>Attributes</a>:</dt>
    <dd><{cwmnx/profile}> — profile describing constraints on the contents of this score</dd>
  </dl>

The <{cwmnx}> element is a <a>musical body</a> that describes a CWMNX
score as a whole.

The <dfn element-attr><code>profile</code></dfn> attribute declares a <a>score
profile</a> that supplies constraints to which the score is expected to obey.

The following values of <{cwmnx/profile}> are supported, along with the
constraints that they represent:

<dl dfn-for="cwmnx/profile">
    <dt><dfn attr-value><code>standard</code></dfn></dt>
    <dd>The <a>system content</a> in all <{system}> or <{part}> elements consists of an identical number of measures.</dd>
    <dd>Time and key signatures only occur in measures within the <{system}> element.</dd>
</dl>

</section>

<section>
<h5 id="the-system-element">The <dfn element><code>system</code></dfn> element</h5>
<section dfn-for="system">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd><{cwmnx}></dd>
    <dt><a>Content Model</a>:</dt>
    <dd><a>System content</a>, which must not include any <a>sequence content</a></dd>
  </dl>

The <{system}> element represents a set of measures, each of which provides
content that is shared by all parts within the score. Each <{measure}> element
within <{system}> supplies the shared content for all other <{measure}>
elements which share the same measure number.

Typical examples of such content include key signatures, time signatures and
tempo indications.

<a>Notated events</a> like notes or rests cannot be shared between parts in CWMN. Consequently,
<a>sequence content</a> cannot occur in the measures within <{system}>.

</section>

<h5 id="the-part-element">The <dfn element><code>part</code></dfn> element</h5>
<section dfn-for="part">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd><{cwmnx}></dd>
    <dt><a>Content Model</a>:</dt>
    <dd><a>Part description content</a></dd>
    <dd><a>System content</a></dd>
  </dl>
</section>

<h4 id="cwmnx-system-content">System content</h4>

<dfn>System content</dfn> supplies a sequence of <{measure}> elements, each of
which supplies musical content for a time interval within a score.

The placement of the measures in system content constitutes their <dfn>score
order</dfn>, which is the order in which they are logically presented to a
reader. This is distinct from their <dfn>performance order</dfn>, which is the
order in which they are played by a performer.

<h5 id="the-measure-element">The <dfn element><code>measure</code></dfn> element</h5>
<section dfn-for="measure">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd><{system}>, <{part}></dd>
    <dt><a>Content Model</a>:</dt>
    <dd><a>Metadata content</a></dd>
    <dd><a>Direction content</a></dd>
    <dd>One or more <{sequence}> elements (for measures within <{part}> elements only)</dd>
    <dd><a>Interpretation content</a></dd>
    <dt><a>Attributes</a>:</dt>
  </dl>
</section>

<h4 id="cwmnx-sequence-content">Sequence content</h4>

<dfn>Sequence content</dfn> supplies a series of musical events that are
both presented and performed in a given order, each at a distinct time. Such
events express the concepts of chords, notes and rests.

Sequence content possesses a <dfn>starting position</dfn>. This is the
<a>metrical position</a> within a containing measure of the content's first
element.

Sequence content also possesses a <dfn>time modification ratio</dfn>. This is
a rational number scale factor which implicitly applies to all positions and
durations within the content.

Sequence content also may define some number of <a>beamed groups</a>. If defined,
these are lists which accumulate events into groups to which beaming applies.

Within sequence content, nested <a>event content</a>
is assigned <a>metrical positions</a> and placed in beamed groups according to the
following procedure, called <dfn lt="sequence the content|sequencing the content">sequencing the content</dfn>:

<ol>
  <li>Let <var>sequence cursor</var> be the <a>starting position</a> of the sequence content.
  <li>Let <var>content</var> to the list of elements comprising the sequence content.</li>
  <li>While <var>content</var> is not empty:
    <ol>
      <li>Let <var>next</var> be the initial element of <var>content</var>,
      and remove it from the head of <var>content</var>.
      <li>If <var>next</var> is a <{beamed}> element:
        <ol>
          <li>If <var>beamed group</var> has a value of list type, beamed groups have been illegally nested. Throw an error.</li>
          <li>Set <var>beamed group</var> to an empty list.
          <li>
            <a>Sequence the content</a> of <var>next</var>, retaining the value of <var>beamed group</var>.
          </li>
          <li>Record <var>beamed group</var> as a group of beamed events within the sequence.</li>
          <li>Set <var>beamed group</var> to an undefined value.</li>
        </ol>
      </li>
      <li>If <var>next</var> is an <{event}> element:
        <ol>
          <li>If <var>next</var> has a <{event/measure}> value of <{event/measure/yes}>,
            <ol>
              <li>If <var>sequence cursor</var> is greater than zero, throw a processing error.</li>
              <li>Set <var>sequence cursor</var> to the end of the measure as defined by its time signature.</li>
            </ol>
          </li>
          <li>Else,
            <ol>
              <li>
                Set the <a>metrical position</a> of <var>next</var> to <var>sequence cursor</var>.
              </li>
              <li>
                Add the duration of <var>next</var>, multiplied by the
                  <a>time modification ratio</a>, to <var>sequence cursor</var>.
              </li>
              <li>
                If <var>beamed group</var> is a list, append <var>next</var> to <var>beamed group</var>.
            </ol>
        </ol>
      </li>
      <li>If <var>next</var> is a <{space}> element:
        <ol>
          <li>
            Set the <a>metrical position</a> of <var>next</var> to <var>sequence cursor</var>.
          </li>
          <li>
            Add the duration of <var>next</var>, multiplied by the
              <a>time modification ratio</a>, to <var>sequence cursor</var>.
          </li>
        </ol>
      </li>
      <li>Else, if <var>next</var> is a <{tuplet}> element:
        <ol>
          <li>
            <a>Sequence the content</a> of <var>next</var>, using
            <var>sequence cursor</var> as the <a>starting position</a>,
            retaining the current value of <var>beamed group</var>, and
            multiplying the <a>time modification ratio</a> by the <{tuplet}>'s
            <{tuplet/outer}> / <{tuplet/inner}> ratio
            for the processing of the tuplet.
          </li>
          <li>
            Add the total duration of <var>next</var> as given by <{tuplet/outer}>, multiplied by the
              <a>time modification ratio</a>, to <var>sequence cursor</var>.
          </li>
        </ol>
      </li>
      <li>Else, if <var>next</var> is a <{grace}> element:
        <ol>
          <li>
            Process the contents of <var>next</var>, assigning them a non-metrical ordering
            relative to preceding or following elements as appropriate.
        </ol>
      </li>
      <li>
        If <var>sequence cursor</var> exceeds the specified duration for the enclosing element
        (time signature for a <{measure}>, <{tuplet/inner}> attribute for a <{tuplet}>), throw
        a processing error.
      </li>
    </ol>
  </li>
</ol>

<h5 id="the-sequence-element">The <dfn element><code>sequence</code></dfn> element</h5>

<section dfn-for="sequence">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd><{measure}></dd>
    <dt><a>Content Model</a>:</dt>
    <dd><a>Metadata content</a></dd>
    <dd><a>Sequence content</a></dd>
    <dd><a>Interpretation content</a></dd>
    <dt><a>Attributes</a>:</dt>
    <dd><{sequence/orient}> - default <a>orientation</a> of direction and sequence content </dd>
    <dd><{sequence/staff}> - default staff index of direction or sequence content</dd>
  </dl>

The <{sequence}> element organizes a set of musical events within a
measure into a strict temporal sequence, accompanied by relevant directions.
This is accomplished by <a>sequencing the content</a>, with a <a>starting
position</a> of 0 and a <a>time modification ratio</a> of 1.

The optional <dfn element-attr>orient</dfn> attribute provides a specific
<a>orientation</a> for all content within this sequence. If not provided, the
orientation is determined automatically according to the implementation's
rendering rules.

The <dfn element-attr>staff</dfn> attribute provides a specific
<a>staff index</a> for all content within this sequence.  If not provided, the
staff index is determined automatically according to the implementation's
rendering rules.

</section>

<h5 id="the-event-element">The <dfn element><code>event</code></dfn> element</h5>
<section dfn-for="event">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd><{sequence}>, <{tuplet}>, <{beamed}></dd>
    <dt><a>Content Model</a>:</dt>
    <dd><a>Metadata content</a></dd>
    <dd>Either zero or more <{note}> elements, or one <{rest}> element.</dd>
    <dd><a>Event content</a></dd>
    <dd><a>Direction content</a></dd>
    <dd><a>Interpretation content</a></dd>
    <dt><a>Attributes</a>:</dt>
    <dd><{event/value}> - the metrical duration of this event</dd>
    <dd><{event/measure}> - optional flag indicating that the event occupies the entire measure.</dd>
    <dd><{event/orient}> - optional <a>orientation</a> of this event </dd>
    <dd><{event/staff}> - optional <a>staff index</a> of this event </dd>
    <dd><{event/beam-count}> - optional count of beams connecting this event to its successor</dd>
    <dt><a>Style properties</a>:</dt>
    <dd>'stem' - the stem direction of this event</dd>
  </dl>

The <{event}> element represents a <a>notated event</a>: a discrete period of
time within a sequence during which one or more notes are performed, or in
which a rest occurs.

All events other than <a>whole-measure events</a> require a <dfn element-attr>
value</dfn> attribute to provide their duration as a <a>note value</a>.
This duration is implicitly multiplied by the current <a>time modification
ratio</a>, as specified by the process of <a>sequencing the content</a> of the
event's containing element.

If the optional <dfn element-attr>measure</dfn> attribute is given as <dfn
attr-value dfn-for="event/measure">yes</dfn>, then the event is a <dfn>whole-measure
event</dfn> which occupies the entire measure. Whole-measure events may not
specify a <{event/value}> attribute, and must either be empty or contain
exactly one <{rest}>.

The optional <dfn element-attr>orient</dfn> attribute provides a specific
<a>orientation</a> for this event. If not provided, the orientation is
inherited from any <{sequence}> or <{tuplet}> ancestor which specified it. If
no ancestor did so, it is determined automatically according to the
implementation's rendering rules.

The optional <dfn element-attr>staff</dfn> attribute provides a specific
<a>staff index</a> for this event. If not provided, the orientation is
inherited from any <{sequence}> or <{tuplet}> ancestor which specified it. If
no ancestor did so, it is determined automatically according to the
implementation's rendering rules.

The optional <dfn element-attr>beam-count</dfn> attribute defines a specific
number of beams that connect this event to its successor within a <a>beamed group</a>
of events.
</section>
<section>
The <dfn property><code>stem</code></dfn> property controls the direction
of any rendered stem associated with this event. If omitted, the stem direction
is determined automatically by the implementation, in accordance with the
<a>orientation</a> of the event.

The value <dfn attr-value dfn-for="stem">up</dfn> causes an event's stem to be rendered pointing upwards.

The value <dfn attr-value dfn-for="stem">down</dfn> causes an event's stem to be rendered pointing downwards.
</section>

<h5 id="the-tuplet-element">The <dfn element><code>tuplet</code></dfn> element</h5>
<section dfn-for="tuplet">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd><{sequence}>, <{tuplet}>, <{beamed}></dd>
    <dt><a>Content Model</a>:</dt>
    <dd><a>Metadata content</a></dd>
    <dd><a>Sequence content</a></dd>
    <dd><a>Interpretation content</a></dd>
    <dt><a>Attributes</a>:</dt>
    <dd><{tuplet/outer}> - duration with respect to containing element</dd>
    <dd><{tuplet/inner}> - duration of the enclosed sequence content</dd>
    <dd><{sequence/orient}> - optional <a>orientation</a> of this tuplet </dd>
    <dd><{sequence/staff}> - optional <a>staff index</a> of this tuplet </dd>
  </dl>

The <{tuplet}> element organizes a set of musical events that form a distinct
and contiguous run within a <{sequence}, and which are subject to a common
<a>time modification ratio</a> expressed as the quotient of two rational numbers.
A <{tuplet}> behaves much like a <{sequence}> element with respect to its contents.

The required attribute <dfn element-attr>outer</dfn> supplies a <a>note value
quantity</a> describing both the duration and the units of the tuplet with
respect to its enclosing context. This is how much time the tuplet occupies in
the measure or tuplet in which it is placed.

The required attribute <dfn element-attr>inner</dfn> supplies a <a>note value
quantity</a> describing the total duration and the units of the events within
the tuplet, as notated.

The contents of the tuplet are placed into a temporal sequence by performing
the procedure <a>sequencing the content</a> with a <a>starting position</a>
determined by the parent context, and a <a>time modification ratio</a> equal
to the tuplet's <{tuplet/outer}> value divided by its <{tuplet/inner}> value.
Following this procedure, the value of the <var>sequence cursor</var> MUST
equal the value of <{tuplet/inner}>, or the contents are considered to be in error.

The optional <dfn element-attr>orient</dfn> attribute provides a specific
<a>orientation</a> for all content within this sequence. If not provided, the
orientation is determined automatically according to the implementation's
rendering rules.

The <dfn element-attr>staff</dfn> attribute provides a specific
<a>staff index</a> for all content within this sequence.  If not provided, the
staff index is determined automatically according to the implementation's
rendering rules.

</section>

<h5 id="the-beamed-element">The <dfn element><code>beamed</code></dfn> element</h5>
<section dfn-for="beamed">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd><{sequence}>, <{tuplet}></dd>
    <dt><a>Content Model</a>:</dt>
    <dd><a>Metadata content</a></dd>
    <dd><a>Sequence content</a></dd>
    <dd><a>Interpretation content</a></dd>
    <dt><a>Attributes</a>:</dt>
    <dd><{beamed/next}> - optional continuing beam group in following measure</dd>
  </dl>

The <{beamed}> element defines a <dfn>beamed group</dfn> of events that are joined
by beams to conceptually mark them as belonging to a distinct run.

It is not valid to nest a <{beamed}> element inside another, directly or indirectly.

Beams may continue from one measure to the next. In this case, the <dfn element-attr>next</dfn>
attribute gives the <a>element location</a> of a <{beamed}> element in the succeeding
measure of the same part. This attribute may only be specified if no other events follow
this beamed group in its measure.

NOTE: In general, the number of beams and the use of forward or backward hooks
is determined automatically by implementations, using both <{beamed}> and the
<{event/beam-count}> attribute of <{event}>. More detailed beam specifications
may be overridden using style properties, but do not amount to semantic
markup.
</section>

<h5 id="the-space-element">The <dfn element><code>space</code></dfn> element</h5>
<section dfn-for="space">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd><{sequence}>, <{tuplet}></dd>
    <dt><a>Content Model</a>:</dt>
    <dd><a>Metadata content</a></dd>
    <dt><a>Attributes</a>:</dt>
    <dd><{space/duration}> - the metrical duration of this space</dd>
    <dt><a>Style properties</a>:</dt>
    <dd>'stem' - the stem direction of this event</dd>
  </dl>

The <{space}> element represents a discrete period of time within a sequence
in which no notations occur.

The <dfn element-attr>duration</dfn> attribute specifies a <a>note value
quantity</a> that provides the length of this <{space}>.

Note: In contrast to <{event}>'s <{event/value}> attribute, the
<{space/duration}> attribute is not constrained to a single note value, but
may be a multiple of one.
</section>

<h5 id="the-grace-element">The <dfn element><code>grace</code></dfn> element</h5>
<section dfn-for="grace">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd><{sequence}>, <{tuplet}></dd>
    <dt><a>Content Model</a>:</dt>
    <dd><a>Metadata content</a></dd>
    <dd><a>Sequence content</a></dd>
    <dd><a>Interpretation content</a></dd>
    <dt><a>Attributes</a>:</dt>
    <dd><{grace/slash}> - a flag indicating that this run of grace events bears a slash</dd>
    <dd><{event/orient}> - optional <a>orientation</a> of this event </dd>
    <dd><{event/staff}> - optional <a>staff index</a> of this event </dd>
    <dt><a>Style properties</a>:</dt>
    <dd>'stem' - the stem direction of this event</dd>
  </dl>

The <{grace}> element represents a run of events that do not have defined
measure positions, but are performed in such a way that they either:

- occupy a time interval within the preceding event that concludes on the following event, or

- delay the onset of the following event by the time interval occupied by the run

The <dfn element-attr>slash</dfn> event declares that a slash is notated for
this run of grace notes if its value is <dfn attr-value dfn-
for="grace/slash">yes</dfn>. Otherwise, by default, the contents of <{grace}>
are interpreted as an appoggiatura and thus delay the onset of the following
event.

</section>

<h5 id="the-note-element">The <dfn element><code>note</code></dfn> element</h5>
<section dfn-for="note">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd><{event}></dd>
    <dt><a>Content Model</a>:</dt>
    <dd><a>Metadata content</a></dd>
    <dd><a>Note content</a></dd>
    <dd><a>Liaison content</a></dd>
    <dt><a>Attributes</a>:</dt>
    <dd><{note/pitch}> - the musical pitch of this note </dd>
  </dl>

The <{note}> element defines a single note within an event, along with other
information pertaining to the note itself rather than to its containing event.

The <dfn element-attr>pitch</dfn> attribute supplies the pitch of the note
as a <a>chromatic pitch</a>, using the <a>rules for parsing a chromatic pitch</a>.

</section>

<!--
  <note> schema elements:

      <xs:element name="instrument" type="instrument" minOccurs="0"/>
      <xs:group ref="editorial-voice"/>
      <xs:element name="type" type="note-type" minOccurs="0"/>
      <xs:element name="dot" type="empty-placement" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>One dot element is used for each dot of prolongation. The placement element is used to specify whether the dot should appear above or below the staff line. It is ignored for notes that appear on a staff space.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="accidental" type="accidental" minOccurs="0"/>
      <xs:element name="time-modification" type="time-modification" minOccurs="0"/>
      <xs:element name="stem" type="stem" minOccurs="0"/>
      <xs:element name="notehead" type="notehead" minOccurs="0"/>
      <xs:element name="notehead-text" type="notehead-text" minOccurs="0"/>
      <xs:group ref="staff" minOccurs="0"/>
      <xs:element name="beam" type="beam" minOccurs="0" maxOccurs="8"/>
      <xs:element name="notations" type="notations" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="lyric" type="lyric" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="play" type="play" minOccurs="0"/>
  -->

<h5 id="the-rest-element">The <dfn element><code>rest</code></dfn> element</h5>
<section dfn-for="rest">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd><{event}></dd>
    <dt><a>Content Model</a>:</dt>
    <dd><a>Metadata content</a></dd>
    <dt><a>Attributes</a>:</dt>
  </dl>

The <{rest}> element defines a rest within an event, along with other
information pertaining to the rest rather than to its containing event.
</section>

<h4 id="cwmnx-event-content">Event content</h4>

<dfn>Event content</dfn> comprises elements that describe the musical content
of a single event, that is performed at a distinct time.

<h5 id="the-articulations-element">The <dfn element><code>articulations</code></dfn> element</h5>
<section dfn-for="articulations">
</section>

<h5 id="the-lyric-element">The <dfn element><code>lyric</code></dfn> element</h5>
<section dfn-for="lyric">
</section>

<h5 id="the-ornaments-element">The <dfn element><code>ornaments</code></dfn> element</h5>
<section dfn-for="ornaments">
</section>

<h5 id="the-technical-element">The <dfn element><code>technical</code></dfn> element</h5>
<section dfn-for="technical">
</section>

<h4 id="cwmnx-note-content">Note content</h4>

<dfn>Note content</dfn> comprises elements that describe the musical nature
of a single note within an event.

<h5 id="the-accidental-element">The <dfn element><code>accidental</code></dfn> element</h5>
<section dfn-for="accidental">
</section>

<h5 id="the-notehead-element">The <dfn element><code>notehead</code></dfn> element</h5>
<section dfn-for="notehead">
</section>

<h5 id="the-fret-element">The <dfn element><code>fret</code></dfn> element</h5>
<section dfn-for="fret">
</section>

<h5 id="the-string-element">The <dfn element><code>string</code></dfn> element</h5>
<section dfn-for="string">
</section>

<h4 id="cwmnx-liaison-content">Liaison content</h4>

<dfn>Liaison content</dfn> comprises elements that describe the liaison or connection
between a single note within an event, and some other note.

<h5 id="the-tied-element">The <dfn element><code>tied</code></dfn> element</h5>
<section dfn-for="tied">
</section>

<h5 id="the-glissando-element">The <dfn element><code>glissando</code></dfn> element</h5>
<section dfn-for="glissando">
</section>

<h5 id="the-slide-element">The <dfn element><code>slide</code></dfn> element</h5>
<section dfn-for="slide">
</section>

<h5 id="the-bend-element">The <dfn element><code>bend</code></dfn> element</h5>
<section dfn-for="bend">
</section>

<h5 id="the-hammer-on-element">The <dfn element><code>hammer-on</code></dfn> element</h5>
<section dfn-for="hammer-on">
</section>

<h5 id="the-pull-off-element">The <dfn element><code>pull-off</code></dfn> element</h5>
<section dfn-for="pull-off">
</section>


<h4 id="cwmnx-direction-content">Direction content</h4>

<dfn>Direction content</dfn> consists of some number of musical <dfn
element>directions</dfn> that modify or accompany the performance of events in
one or more measures.  Note that <a>directions</a> may also be freely included
in <a>sequence content</a>.

A direction is <dfn lt="direction scope">scoped</dfn> in a way that depends on
where it is placed:

- A direction in a <{measure}> within the <{system}> element applies to all sequences of the measure in all parts.
- A direction in a <{measure}> within a <{part}> element applies to all sequences of the measure in a given part.
- A direction in a <{sequence}> applies to the sequence in which it occurs.
- A direction in an <{event}> applies to the event in which it occurs.

All directions not contained in an <{event}> element, MUST be given an
explicit <a>measure location</a> by supplying a <dfn element-attr dfn-
for="directions">location</dfn> attribute.

Beneath an <{event}> element, directions are forced to assume the  measure
location of the containing event. Such directions MUST NOT be assigned an
explicit location.

<h5 id="the-dynamics-element">The <dfn element><code>dynamics</code></dfn> element</h5>
<section dfn-for="dynamics">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd><a>Direction content</a></dd>
    <dt><a>Content Model</a>:</dt>
    <dd>None</dd>
    <dt><a>Attributes</a>:</dt>
    <dd><{dynamics/type}> - the semantic nature of this dynamics direction</dd>
    <dd><{directions/location}> - optional <a>measure location</a> of this direction, where required</dd>
  </dl>

The <{dynamics}> element describes a textual dynamic direction to the performer.

The <dfn element-attr>type</dfn> attribute describes the nature of the dynamic. The following
dynamics are supported:

<dl dfn-for="dynamics/type">
  <dt><dfn attr-value><code>p</code></dfn>, <dfn attr-value><code>pp</code></dfn>, <dfn attr-value><code>ppp</code></dfn>, <dfn attr-value><code>pppp</code></dfn>, <dfn attr-value><code>ppppp</code></dfn>, <dfn attr-value><code>pppppp</code></dfn>, <dfn attr-value><code>mp</code></dfn></dt>
  <dt><dfn attr-value><code>mf</code></dfn>, <dfn attr-value><code>f</code></dfn>, <dfn attr-value><code>ff</code></dfn>, <dfn attr-value><code>fff</code></dfn>, <dfn attr-value><code>ffff</code></dfn>, <dfn attr-value><code>fffff</code></dfn>, <dfn attr-value><code>ffffff</code></dfn></dt>
  <dt><dfn attr-value><code>sf</code></dfn>, <dfn attr-value><code>sfp</code></dfn>, <dfn attr-value><code>sfpp</code></dfn>, <dfn attr-value><code>fp</code></dfn>, <dfn attr-value><code>rf</code></dfn>, <dfn attr-value><code>rfz</code></dfn>, <dfn attr-value><code>sfz</code></dfn>, <dfn attr-value><code>sffz</code></dfn>, <dfn attr-value><code>fz</code></dfn></dt>
</dl>

</section>

<h5 id="the-harmony-element">The <dfn element><code>harmony</code></dfn> element</h5>
<section dfn-for="harmony">
</section>

<h5 id="the-instruction-element">The <dfn element><code>instruction</code></dfn> element</h5>
<section dfn-for="instruction">
</section>

<h5 id="the-expression-element">The <dfn element><code>expression</code></dfn> element</h5>
<section dfn-for="expression">
</section>

<h5 id="the-coda-element">The <dfn element><code>coda</code></dfn> element</h5>
<section dfn-for="coda">
</section>

<h5 id="the-segno-element">The <dfn element><code>segno</code></dfn> element</h5>
<section dfn-for="segno">
</section>

<h4 id="cwmnx-spanning-directions">Spanning directions</h4>

<dfn>Spanning directions</dfn> are directions whose temporal extent within a part is
characterized by a <a>span</a>.

Spanning directions MUST be given a <a>measure location</a> as their endpoint,
by supplying a <dfn element-attr dfn-for="spans">end</dfn> attribute. This
measure location must lie within the same run of <a>system content</a> as the
location given for the start of the spanning direction.

<h5 id="the-slur-element">The <dfn element><code>slur</code></dfn> element</h5>
<section dfn-for="slur">
</section>

<h5 id="the-wedge-element">The <dfn element><code>wedge</code></dfn> element</h5>
<section dfn-for="wedge">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd><a>Direction content</a></dd>
    <dt><a>Content Model</a>:</dt>
    <dd>None</dd>
    <dt><a>Attributes</a>:</dt>
    <dd><{wedge/type}> - the type of wedge</dd>
    <dd><{directions/location}> - optional <a>measure location</a> of the direction's start, where required</dd>
    <dd><{spans/end}> - a required <a>measure location</a> for the direction's end</dd>
  </dl>

The <dfn element-attr>type</dfn> attribute describes the nature of the wedge:

<dl dfn-for="wedge/type">
  <dt><dfn attr-value><code>diminuendo</code></dt>
  <dd>The wedge represents a decrease in dynamic level.</dd>
  <dt><dfn attr-value><code>crescendo</code></dt>
  <dd>The wedge represents an increase in dynamic level.</dd>
</dl>

</section>

<h5 id="the-pedal-element">The <dfn element><code>pedal</code></dfn> element</h5>
<section dfn-for="pedal">
</section>

<h5 id="the-bracket-element">The <dfn element><code>bracket</code></dfn> element</h5>
<section dfn-for="bracket">
</section>

<h5 id="the-dirgroup-element">The <dfn element><code>dirgroup</code></dfn> element</h5>
<section dfn-for="dirgroup">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd><a>Direction content</a></dd>
    <dt><a>Content Model</a>:</dt>
    <dd><a>Direction content</a>, which must not include <a>measure locations</a></dd>
    <dt><a>Attributes</a>:</dt>
    <dd><{directions/location}> - optional <a>measure location</a> of this direction, where required</dd>
  </dl>
The <{dirgroup}> element describes a set of directions which are presented
sequentially, like a sentence. The typical presentation of directions in a group is
to arrange them horizontally from left to right.

TBD: spacing

</section>
<h4 id="cwmnx-staff-content">Staff content</h4>

<dfn>Staff content</dfn> consists of elements that apply as a whole to the
musical staff on which events are placed. Such elements may occur in any
<{measure}> element.

In general, any element of staff content <dfn>partitions</dfn> the events in a
measure, such that all events lie either before or after the given element.
For example, consider a <{clef}> element describing a clef change. No matter
how many polyphonic voices exist in a measure, all notes in all voices either
lie to the left or to the right of this clef.

Staff content that modifies the interpretation or layout of the staff, applies
from the start of that <{measure}> to all subsequent measures within the same
<{system}> or <{part}> element until changed.

Most staff content elements have a fixed location, typically the beginning or
end of the measure in which they occur.

<h5 id="the-key-element">The <dfn element><code>key</code></dfn> element</h5>
<section dfn-for="key">
</section>

<h5 id="the-time-element">The <dfn element><code>time</code></dfn> element</h5>
<section dfn-for="time">
</section>

<h5 id="the-tempo-element">The <dfn element><code>tempo</code></dfn> element</h5>
<section dfn-for="tempo">
</section>

<h5 id="the-staves-element">The <dfn element><code>staves</code></dfn> element</h5>
<section dfn-for="staves">
</section>

<h5 id="the-staff-details-element">The <dfn element><code>staff-details</code></dfn> element</h5>
<section dfn-for="staff-details">
</section>

<h5 id="the-clef-element">The <dfn element><code>clef</code></dfn> element</h5>
<section dfn-for="clef">
</section>

<h5 id="the-barline-element">The <dfn element><code>barline</code></dfn> element</h5>
<section dfn-for="barline">
</section>

<h5 id="the-use-instrument-element">The <dfn element><code>use-instrument</code></dfn> element</h5>
<section dfn-for="use-instrument">
</section>

<h5 id="the-transpose-element">The <dfn element><code>transpose</code></dfn> element</h5>
<section dfn-for="transpose">
</section>


<h4 id="cwmnx-part-description-content">Part description content</h4>

<dfn>Part description content</dfn> consists of elements that supply information describing a part,
and occur at the beginning of a <{part}> element.

<h5 id="the-part-name-element">The <dfn element><code>part-name</code></dfn> element</h5>
<section dfn-for="part-name">
</section>

<h5 id="the-part-abbreviation-element">The <dfn element><code>part-abbreviation</code></dfn> element</h5>
<section dfn-for="part-abbreviation">
</section>

<h5 id="the-score-instrument-element">The <dfn element><code>score-instrument</code></dfn> element</h5>
<section dfn-for="score-instrument">
</section>

<h4 id="cwmnx-interpretation-content">Interpretation content</h4>

<dfn>Interpretation content</dfn> may be included in some elements to control
the specific way in which the element is interpreted as a musical performance.
In general, this content supplies explicit <a>performance events</a> to
replace the defaults that an MNX consumer would determine based on a default
<a>performance interpretation</a>.  

<em>Elements TBD</em>

<!--
    To generate these from bullet-points like "- <{elementname}>", use this regexp substitution:
    Find:
        - <{([a-z-]+)}>
        or, in an XSD:
        (?s)\s*<xs:element name="(\w+)".*</xs:element>
    Replace:
        <h5 id="the-$1-element">The <dfn element><code>$1</code></dfn> element</h5>\n<section dfn-for="$1">\n</section>\n
-->
</section>

<h3 id="cwmnx-style-properties">Style properties</h3>

<dfn>Style properties</dfn> may be included in many elements to control the
specific way in which the element is rendered. Each property is defined as a
key-value pair.

Style properties are applied to each MNX semantic element according to the following
procedure for <dfn>style property computation</dfn>:

<ol>
  <li>Apply the property values from each <a>style selector definition</a>
    whose <a>style selector rule</a> matches the semantic element.
    All definitions with a matching rule are applied in the order
    that they were encountered in processing of the document.
  </li>

  <li>For each <{class}> element belonging to the semantic element, in the order
    of occurrence, apply the property values from each <a>style class definition</a>
    whose class name matches the <{class/name}> attribute.
    All definitions with a matching name are applied in the order
    that they were encountered in processing of the document.
  </li>

  <li>For each <{style}> element belonging to the semantic element,
    in the order of occurrence, apply its property value.
  </li>

Properties are documented in the following places:

- Properties applying to all elements are defined below under <a href="cwmnx-common-properties">common style properties</a>.

- Properties applying to a <a>content category</a> are defined in the section describing that category.

- Properties applying to a specific element are defined in the description of that element.

<h4 id="the-style-element">The <dfn element><code>style</code></dfn> element</h4>
<section dfn-for="style">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>Any.</dd>
    <dt><a>Content Model</a>:</dt>
    <dd>Empty.</dd>
    <dt><a>Attributes</a>:</dt>
    <dd><{style/property}> - the name of the property being defined</dd>
    <dd><{style/value}> - the value of the property being defined</dd>
  </dl>

The <{style}> element supplies the value of an explicit style property
which applies to the containing element.

The <dfn element-attr>property</dfn> attribute gives the name of a property
whose value is supplied by this <{style}> element's <dfn element-attr>value</dfn>
attribute, applying to the rendering or interpretation of the
containing element.

</section>

<h4 id="the-class-element">The <dfn element><code>class</code></dfn> element</h4>
<section dfn-for="class">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>Any.</dd>
    <dt><a>Content Model</a>:</dt>
    <dd>Empty.</dd>
    <dt><a>Attributes</a>:</dt>
    <dd><{class/name}> - a <a>style class definition</a></dd>
  </dl>

The <{class}> element supplies the value of a <a>style class definition</a>
which applies to a containing element as per the rules of <a>style property
computation</a>.

The <dfn element-attr>name</dfn> attribute supplies the name of a style class
definition which applies to the containing element as an <a>ordered set of
space-separated tokens</a>. All style property values supplied by the class
definition are applied to the element in the order in which they were defined.

</section>

<h4 id="cwmnx-common-properties">Common style properties</h4>

The following <a>style properties</a> apply to many kinds of object in CWMNX, and in general
apply to all descendants of the element within which they are specified.

<h5 id="the-color-property">The <dfn property><code>color</code></dfn> property</h5>
<section dfn-for="color">
  The 'color' property specifies a <a>simple color</a> to be used to render a notational object.
</section>

<h5 id="the-glyph-property">The <dfn property><code>glyph</code></dfn> property</h5>
<section dfn-for="glyph">
  The 'glyph' property specifies a specific <a>SMuFL glyph name</a> to be used to render a notational object.
</section>

<h5 id="the-display-property">The <dfn property><code>display</code></dfn> property</h5>
<section dfn-for="display">

The 'display' property controls whether an element's contents (including
all of its descendants) are displayed by a consumer or not. The layout of the
document is affected by this property, in that a value of ''display/none'' will display
the document as if the styled element did not exist.

Permitted values include:

- <dfn value>normal</dfn> the element is displayed normally
- <dfn value>none</dfn> the element is not processed for display

</section>

<h5 id="the-visibility-property">The <dfn property><code>visibility</code></dfn> property</h5>
<section dfn-for="visibility">

The 'visibility' property controls whether an element's contents (including
all of its descendants) are displayed by a consumer or not.

In contrast to 'display' with a value of ''display/none'', a 'visibility'
value of ''visibility/hidden'' does not affect the layout of any other
elements in the document. For example, the contents of a hidden <{event}>
will not be shown, but the place where the event would have appeared
will still occupy space in the containing measure.

Permitted values include:

- <dfn value>visible</dfn> the element is visible
- <dfn value>hidden</dfn> the element is hidden

</section>

<h5 id="the-audibility-property">The <dfn property><code>perform</code></dfn> property</h5>
<section dfn-for="perform">

The 'perform' property controls whether an element's contents (including
all of its descendants) are performed by a consumer or not.

Permitted values include:

- <dfn value>perform</dfn> the element is performed
- <dfn value>none</dfn> the element is omitted from performance

</section>

<h3 id="cwmnx-stylesheet-definitions">Stylesheet definitions</h3>

The <{style-class}> and <{style-selector}> elements allow definition of style
properties in groups that can be applied in a unitary fashion to other
elements, respectively by name matching in a <a>style class definition</a>, or by
algorithmic rule matching in a <a>style selector definition</a>. Taken together,
these supply a set of <dfn>stylesheet definitions</dfn> that control the rendering
and interpretation of the document.

These definitions may be placed in the <{head}>, the <{cwmnx}>
element, or in a separate linked stylesheet.

<h4 id="the-style-class-element">The <dfn element><code>style-class</code></dfn> element</h4>
<section dfn-for="style-class">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>Any.</dd>
    <dt><a>Content Model</a>:</dt>
    <dd>One or more <{style}> elements.</dd>
    <dt><a>Attributes</a>:</dt>
    <dd><{style-class/name}> - the name of this style class definition</dd>
  </dl>

The <{style-class}> element supplies a <dfn>style class definition</dfn>,
which associates a list of style property values with a class that can be
referenced elsewhere using its name alone, as per the rules of <a>style
property computation</a>. The list of property values in the class is
contained in a set of child <{style}> elements.

The <dfn element-attr>name</dfn> attribute supplies the name of this style class
definition.

Multiple occurrences of <{style-class}> are permitted to share the same value
of <{style-class/name}>. These are equivalent to a single occurrence of
<{style-class}> with the same constituent definitions of style property values
in the same order.
</section>

<h4 id="the-style-selector-element">The <dfn element><code>style-selector</code></dfn> element</h4>
<section dfn-for="style-selector">
  <dl class="def">
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>Any.</dd>
    <dt><a>Content Model</a>:</dt>
    <dd>One or more <{style}> elements.</dd>
    <dt><a>Attributes</a>:</dt>
    <dd><{style-selector/rule}> - a set of element names to which this style selector definition applies</dd>
  </dl>

The <{style-selector}> element supplies a <dfn>style selector
definition</dfn>, which defines a list of style property values applying to
all elements matching a <a>style selector rule</a>, as per the rules of <a>style
property computation</a>. The list is contained in a set of child <{style}>
elements that belong to the class selector.

The <dfn element-attr>rule</dfn> attribute supplies a <dfn>style selector rule</dfn>
that is automatically applied to all semantic MNX elements to determine a set of
implied style properties. The following rule syntax is supported:

- An <a>unordered set of space-separated tokens</a>, each of which is the name
    of an MNX element. Elements whose names belong to this set are considered to
    match the rule.

Multiple occurrences of <{style-selector}> are permitted to share the same value
of <{style-selector/rule}>. These are equivalent to a single occurrence of
<{style-selector}> with the same constituent definitions of style property values
in the same order.

</section>

<section>
<h3 id="cwmnx-rendering">Rendering</h3>
</section>

<section>
<h3 id="cwmnx-interpretation">Interpretation</h3>
</section>

<section>
<h2 id="gmnx">GMNX</h2>

<h3 id="the-gmnx-element">The <dfn element><code>gmnx</code></dfn> element</h3>

<section dfn-for="gmnx">

  <dl class="def">
    <dt><a lt="content categories">Description</a>:</dt>
    <dd><a>Musical body content</a> in an MNX <a>container</a>.</dd>
    <dt><a>Contexts in which this element can be used</a>:</dt>
    <dd>Wherever a <a>musical body</a> is expected.</dd>
    <dt><a>Content Model</a>:</dt>
    <dd><a>Metadata content</a>.</dd>
    <dd><em>Visual content</em>.</dd>
    <dd><em>Performance content</em>.</dd>
    <dd>One or more <{part}> elements - description and <a>system content</a> of each part in the score.</dd>
    <dt><a>Attributes</a>:</dt>
    <dd>None.</dd>
  </dl>

The <{gmnx}> element is a <a>musical body</a> that describes a GMNX
score as a whole.

<em>This section TBD. See <a href="../overview/index.html#gmnx">GMNX Proposal</a> for an initial proposal
on its contents.</em>
</section>

<section>
<div data-fill-with="index"></div>

<!-- <pre class="include">
path: sections/elements.include
</pre>

 -->
</section>

<!--  -->
<section>
<div data-fill-with="issues-index"></div>
</section>
